/*
 * Parodos Workflow Service API
 * This is the API documentation for the Parodos Workflow Service. It provides operations to execute assessments to determine infrastructure options (tooling + environments). Also executes infrastructure task workflows to call downstream systems to stand-up an infrastructure option.
 *
 * The version of the OpenAPI document: v1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.redhat.parodos.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.parodos.sdk.model.WorkFlowOptions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WorkFlowResponseDTO
 */
@lombok.Data
@lombok.AllArgsConstructor
@lombok.Builder
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkFlowResponseDTO {

	public static final String SERIALIZED_NAME_WORK_FLOW_EXECUTION_ID = "workFlowExecutionId";

	@SerializedName(SERIALIZED_NAME_WORK_FLOW_EXECUTION_ID)
	private String workFlowExecutionId;

	public static final String SERIALIZED_NAME_WORK_FLOW_OPTIONS = "workFlowOptions";

	@SerializedName(SERIALIZED_NAME_WORK_FLOW_OPTIONS)
	private WorkFlowOptions workFlowOptions;

	/**
	 * Gets or Sets workStatus
	 */
	@JsonAdapter(WorkStatusEnum.Adapter.class)
	public enum WorkStatusEnum {

		FAILED("FAILED"),

		COMPLETED("COMPLETED"),

		IN_PROGRESS("IN_PROGRESS"),

		REJECTED("REJECTED"),

		PENDING("PENDING");

		private String value;

		WorkStatusEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static WorkStatusEnum fromValue(String value) {
			for (WorkStatusEnum b : WorkStatusEnum.values()) {
				if (b.value.equals(value)) {
					return b;
				}
			}
			throw new IllegalArgumentException("Unexpected value '" + value + "'");
		}

		public static class Adapter extends TypeAdapter<WorkStatusEnum> {

			@Override
			public void write(final JsonWriter jsonWriter, final WorkStatusEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public WorkStatusEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return WorkStatusEnum.fromValue(value);
			}

		}

	}

	public static final String SERIALIZED_NAME_WORK_STATUS = "workStatus";

	@SerializedName(SERIALIZED_NAME_WORK_STATUS)
	private WorkStatusEnum workStatus;

	public WorkFlowResponseDTO() {
	}

	public WorkFlowResponseDTO workFlowExecutionId(String workFlowExecutionId) {

		this.workFlowExecutionId = workFlowExecutionId;
		return this;
	}

	/**
	 * Get workFlowExecutionId
	 * @return workFlowExecutionId
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public String getWorkFlowExecutionId() {
		return workFlowExecutionId;
	}

	public void setWorkFlowExecutionId(String workFlowExecutionId) {
		this.workFlowExecutionId = workFlowExecutionId;
	}

	public WorkFlowResponseDTO workFlowOptions(WorkFlowOptions workFlowOptions) {

		this.workFlowOptions = workFlowOptions;
		return this;
	}

	/**
	 * Get workFlowOptions
	 * @return workFlowOptions
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public WorkFlowOptions getWorkFlowOptions() {
		return workFlowOptions;
	}

	public void setWorkFlowOptions(WorkFlowOptions workFlowOptions) {
		this.workFlowOptions = workFlowOptions;
	}

	public WorkFlowResponseDTO workStatus(WorkStatusEnum workStatus) {

		this.workStatus = workStatus;
		return this;
	}

	/**
	 * Get workStatus
	 * @return workStatus
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public WorkStatusEnum getWorkStatus() {
		return workStatus;
	}

	public void setWorkStatus(WorkStatusEnum workStatus) {
		this.workStatus = workStatus;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		WorkFlowResponseDTO workFlowResponseDTO = (WorkFlowResponseDTO) o;
		return Objects.equals(this.workFlowExecutionId, workFlowResponseDTO.workFlowExecutionId)
				&& Objects.equals(this.workFlowOptions, workFlowResponseDTO.workFlowOptions)
				&& Objects.equals(this.workStatus, workFlowResponseDTO.workStatus);
	}

	@Override
	public int hashCode() {
		return Objects.hash(workFlowExecutionId, workFlowOptions, workStatus);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class WorkFlowResponseDTO {\n");
		sb.append("    workFlowExecutionId: ").append(toIndentedString(workFlowExecutionId)).append("\n");
		sb.append("    workFlowOptions: ").append(toIndentedString(workFlowOptions)).append("\n");
		sb.append("    workStatus: ").append(toIndentedString(workStatus)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
