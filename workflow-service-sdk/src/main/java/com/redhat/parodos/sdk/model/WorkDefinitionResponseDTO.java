/*
 * Parodos Workflow Service API
 * This is the API documentation for the Parodos Workflow Service. It provides operations to execute assessments to determine infrastructure options (tooling + environments). Also executes infrastructure task workflows to call downstream systems to stand-up an infrastructure option.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.redhat.parodos.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * WorkDefinitionResponseDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkDefinitionResponseDTO {
  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets outputs
   */
  @JsonAdapter(OutputsEnum.Adapter.class)
  public enum OutputsEnum {
    EXCEPTION("EXCEPTION"),
    
    HTTP2XX("HTTP2XX"),
    
    NO_EXCEPTION("NO_EXCEPTION"),
    
    OTHER("OTHER");

    private String value;

    OutputsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OutputsEnum fromValue(String value) {
      for (OutputsEnum b : OutputsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OutputsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OutputsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OutputsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OutputsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private List<OutputsEnum> outputs = null;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, Map<String, Object>> parameters = null;

  public static final String SERIALIZED_NAME_PROCESSING_TYPE = "processingType";
  @SerializedName(SERIALIZED_NAME_PROCESSING_TYPE)
  private String processingType;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private String workType;

  public static final String SERIALIZED_NAME_WORKS = "works";
  @SerializedName(SERIALIZED_NAME_WORKS)
  private List<WorkDefinitionResponseDTO> works = null;

  public WorkDefinitionResponseDTO() { 
  }

  public WorkDefinitionResponseDTO author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    this.author = author;
  }


  public WorkDefinitionResponseDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public WorkDefinitionResponseDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WorkDefinitionResponseDTO outputs(List<OutputsEnum> outputs) {
    
    this.outputs = outputs;
    return this;
  }

  public WorkDefinitionResponseDTO addOutputsItem(OutputsEnum outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<OutputsEnum>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

   /**
   * Get outputs
   * @return outputs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OutputsEnum> getOutputs() {
    return outputs;
  }


  public void setOutputs(List<OutputsEnum> outputs) {
    this.outputs = outputs;
  }


  public WorkDefinitionResponseDTO parameters(Map<String, Map<String, Object>> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public WorkDefinitionResponseDTO putParametersItem(String key, Map<String, Object> parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, Map<String, Object>>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Map<String, Object>> getParameters() {
    return parameters;
  }


  public void setParameters(Map<String, Map<String, Object>> parameters) {
    this.parameters = parameters;
  }


  public WorkDefinitionResponseDTO processingType(String processingType) {
    
    this.processingType = processingType;
    return this;
  }

   /**
   * Get processingType
   * @return processingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcessingType() {
    return processingType;
  }


  public void setProcessingType(String processingType) {
    this.processingType = processingType;
  }


  public WorkDefinitionResponseDTO workType(String workType) {
    
    this.workType = workType;
    return this;
  }

   /**
   * Get workType
   * @return workType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkType() {
    return workType;
  }


  public void setWorkType(String workType) {
    this.workType = workType;
  }


  public WorkDefinitionResponseDTO works(List<WorkDefinitionResponseDTO> works) {
    
    this.works = works;
    return this;
  }

  public WorkDefinitionResponseDTO addWorksItem(WorkDefinitionResponseDTO worksItem) {
    if (this.works == null) {
      this.works = new ArrayList<WorkDefinitionResponseDTO>();
    }
    this.works.add(worksItem);
    return this;
  }

   /**
   * Get works
   * @return works
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<WorkDefinitionResponseDTO> getWorks() {
    return works;
  }


  public void setWorks(List<WorkDefinitionResponseDTO> works) {
    this.works = works;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkDefinitionResponseDTO workDefinitionResponseDTO = (WorkDefinitionResponseDTO) o;
    return Objects.equals(this.author, workDefinitionResponseDTO.author) &&
        Objects.equals(this.id, workDefinitionResponseDTO.id) &&
        Objects.equals(this.name, workDefinitionResponseDTO.name) &&
        Objects.equals(this.outputs, workDefinitionResponseDTO.outputs) &&
        Objects.equals(this.parameters, workDefinitionResponseDTO.parameters) &&
        Objects.equals(this.processingType, workDefinitionResponseDTO.processingType) &&
        Objects.equals(this.workType, workDefinitionResponseDTO.workType) &&
        Objects.equals(this.works, workDefinitionResponseDTO.works);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, id, name, outputs, parameters, processingType, workType, works);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkDefinitionResponseDTO {\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    processingType: ").append(toIndentedString(processingType)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    works: ").append(toIndentedString(works)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

