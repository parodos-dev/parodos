openapi: 3.0.1
info:
  description: This is the API documentation for the Parodos Notification Service.
    It provides operations to send out and check notification. The endpoints are secured
    with oAuth2/OpenID and cannot be accessed without a valid token.
  title: Parodos Notification Service API
  version: v1.0.0
servers:
- description: Generated server url
  url: http://localhost:8080
tags:
- description: Operations about notification message in the system
  name: Notification Message
- description: Operations about notification record in the system
  name: Notification Record
paths:
  /api/v1/messages:
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationMessageCreateRequestDTO'
        required: true
      responses:
        "201":
          description: Created
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDTO'
          description: Bad Request
      tags:
      - Notification Message
      x-content-type: application/json
      x-accepts: '*/*'
  /api/v1/notifications:
    get:
      operationId: getNotifications
      parameters:
      - description: Zero-based page index (0..N)
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The size of the page to be returned
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          minimum: 1
          type: integer
        style: form
      - description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - ARCHIVED
          - UNREAD
          type: string
        style: form
      - explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageNotificationRecordResponseDTO'
          description: Successfully retrieved page of notifications
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDTO'
          description: Bad request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageNotificationRecordResponseDTO'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageNotificationRecordResponseDTO'
          description: Forbidden
      summary: Return a list of notification records for the user
      tags:
      - Notification Record
      x-accepts: '*/*'
  /api/v1/notifications/count:
    get:
      operationId: countUnreadNotifications
      parameters:
      - explode: true
        in: query
        name: state
        required: true
        schema:
          enum:
          - ARCHIVED
          - UNREAD
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: Successfully retrieved the amount of notifications
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDTO'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: Forbidden
      summary: Return the number of the unread notification records for the user
      tags:
      - Notification Record
      x-accepts: '*/*'
  /api/v1/notifications/{id}:
    delete:
      operationId: deleteNotification
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Successfully retrieved the amount of notifications
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDTO'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: Delete the specified notification record
      tags:
      - Notification Record
      x-accepts: '*/*'
    put:
      operationId: updateNotificationStatusById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - ARCHIVE
          - READ
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationRecordResponseDTO'
          description: Succeeded
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDTO'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationRecordResponseDTO'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationRecordResponseDTO'
          description: Not found
      summary: Update the specified notification record with user operation
      tags:
      - Notification Record
      x-accepts: '*/*'
components:
  schemas:
    ErrorMessageDTO:
      properties:
        date:
          format: date-time
          type: string
        description:
          type: string
        message:
          type: string
      type: object
    Link:
      example:
        hreflang: hreflang
        profile: profile
        name: name
        rel: rel
        href: href
        media: media
        deprecation: deprecation
        title: title
        type: type
      properties:
        deprecation:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        name:
          type: string
        profile:
          type: string
        rel:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    NotificationMessageCreateRequestDTO:
      example:
        groupNames:
        - groupNames
        - groupNames
        messageType: messageType
        subject: subject
        usernames:
        - usernames
        - usernames
        body: body
      properties:
        body:
          type: string
        groupNames:
          items:
            type: string
          type: array
        messageType:
          type: string
        subject:
          type: string
        usernames:
          items:
            type: string
          type: array
      type: object
    NotificationRecordResponseDTO:
      example:
        folder: folder
        read: true
        messageType: messageType
        subject: subject
        fromuser: fromuser
        links:
        - hreflang: hreflang
          profile: profile
          name: name
          rel: rel
          href: href
          media: media
          deprecation: deprecation
          title: title
          type: type
        - hreflang: hreflang
          profile: profile
          name: name
          rel: rel
          href: href
          media: media
          deprecation: deprecation
          title: title
          type: type
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        body: body
        createdOn: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        body:
          type: string
        createdOn:
          format: date-time
          type: string
        folder:
          type: string
        fromuser:
          type: string
        id:
          format: uuid
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        messageType:
          type: string
        read:
          type: boolean
        subject:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    PageNotificationRecordResponseDTO:
      example:
        number: 0
        last: true
        numberOfElements: 6
        size: 2
        totalPages: 9
        pageable:
          paged: true
          pageNumber: 5
          offset: 1
          pageSize: 5
          unpaged: true
          sort:
            unsorted: true
            sorted: true
            empty: true
        sort:
          unsorted: true
          sorted: true
          empty: true
        content:
        - folder: folder
          read: true
          messageType: messageType
          subject: subject
          fromuser: fromuser
          links:
          - hreflang: hreflang
            profile: profile
            name: name
            rel: rel
            href: href
            media: media
            deprecation: deprecation
            title: title
            type: type
          - hreflang: hreflang
            profile: profile
            name: name
            rel: rel
            href: href
            media: media
            deprecation: deprecation
            title: title
            type: type
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          body: body
          createdOn: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
        - folder: folder
          read: true
          messageType: messageType
          subject: subject
          fromuser: fromuser
          links:
          - hreflang: hreflang
            profile: profile
            name: name
            rel: rel
            href: href
            media: media
            deprecation: deprecation
            title: title
            type: type
          - hreflang: hreflang
            profile: profile
            name: name
            rel: rel
            href: href
            media: media
            deprecation: deprecation
            title: title
            type: type
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          body: body
          createdOn: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
        first: true
        empty: true
        totalElements: 7
      properties:
        content:
          items:
            $ref: '#/components/schemas/NotificationRecordResponseDTO'
          type: array
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          format: int32
          type: integer
        numberOfElements:
          format: int32
          type: integer
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          format: int32
          type: integer
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          format: int64
          type: integer
        totalPages:
          format: int32
          type: integer
      type: object
    PageableObject:
      example:
        paged: true
        pageNumber: 5
        offset: 1
        pageSize: 5
        unpaged: true
        sort:
          unsorted: true
          sorted: true
          empty: true
      properties:
        offset:
          format: int64
          type: integer
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
      type: object
    Sort:
      example:
        unsorted: true
        sorted: true
        empty: true
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
      type: object

