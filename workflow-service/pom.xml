<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>workflow-service</artifactId>
    <name>workflow-service</name>
    <description>Workflow Service for Parodos</description>
    <url>https://github.com/redhat-developer/parodos</url>

    <parent>
        <groupId>dev.parodos</groupId>
        <artifactId>parodos-parent</artifactId>
        <version>${revision}</version>
    </parent>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/redhat-developer/parodos.git</connection>
        <developerConnection>scm:git:ssh://github.com/redhat-developer/parodos.git</developerConnection>
        <url>http://github.com/redhat-developer/parodos/tree/master</url>
    </scm>

    <properties>
        <java.version>11</java.version>
        <common.io.version>2.11.0</common.io.version>
        <model.mapper.version>3.1.1</model.mapper.version>
        <spring-cloud.version>2020.0.6</spring-cloud.version>
        <springdoc-openapi-ui.version>1.6.4</springdoc-openapi-ui.version>
        <hypersistence-utils.version>3.1.0</hypersistence-utils.version>
        <springframework.boot.version>2.5.14</springframework.boot.version>
    </properties>

    <dependencies>
        <!-- START Web Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
        </dependency>
        <!-- END Web Dependencies -->
        <!-- START Spring Security Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.unboundid</groupId>
            <artifactId>unboundid-ldapsdk</artifactId>
        </dependency>

        <!-- END Spring Security Dependencies -->
        <!-- START Spring Data Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-utils-hibernate-52</artifactId>
            <version>${hypersistence-utils.version}</version>
        </dependency>
        <!-- END Spring Data Mongodb Dependencies -->
        <!-- START Health Check Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- END Health Check Dependencies -->
        <!-- START Web Client using OpenFeign Dependencies -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!-- END Web Client using OpenFeign Dependencies -->
        <!-- START API Documentation Dependencies -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi-ui.version}</version>
        </dependency>
        <!-- END API Documentation Dependencies -->
        <!-- START Parodos Library Dependencies -->
        <dependency>
            <groupId>dev.parodos</groupId>
            <artifactId>parodos-model-api</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>dev.parodos</groupId>
            <artifactId>workflow-engine</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- END Parodos Library Dependencies -->
        <!-- START Developer Productivity Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${model.mapper.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- END Developer Productivity Dependencies -->
        <!-- START Misc Dependencies -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${common.io.version}</version>
        </dependency>
        <!-- END Misc Dependencies -->
        <!-- START Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- END Test Dependencies -->
        <!-- START Paging Results Dependencies -->
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
        </dependency>
        <!-- END Paging Results Dependencies -->
        <!-- START AOP Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- END AOP Dependencies -->
        <!-- START CheckSum Utils Dependencies -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <!-- END CheckSum Utils Dependencies -->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springframework.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>clean-openapi-json</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/generated/openapi</directory>
                                    <includes>
                                        <include>openapi.json</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springframework.boot.version}</version>
                <configuration>
                    <wait>1000</wait>
                    <maxAttempts>60</maxAttempts>
                    <profiles>local</profiles>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <jvmArguments>-Dspring-boot.run.profiles=local</jvmArguments>
                            <fork>false</fork>
                        </configuration>
                        <id>pre-openapi-json-gen</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                    <execution>
                        <configuration>
                            <fork>false</fork>
                        </configuration>
                        <id>post-openapi-json-gen</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <layout>ZIP</layout>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <outputDir>${basedir}/generated/openapi</outputDir>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-openapi-json</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local</id>
            <dependencies>
                <dependency>
                    <groupId>dev.parodos</groupId>
                    <artifactId>workflow-examples</artifactId>
                    <version>${revision}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
